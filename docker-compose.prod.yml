# Docker Compose file for Family Wiki production environment
# Note: 'version' field is obsolete in Docker Compose V2 and has been removed

services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-family_wiki}
      POSTGRES_USER: ${POSTGRES_USER:-family_wiki_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-family_wiki_user} -d ${POSTGRES_DB:-family_wiki}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - family-wiki-network
    # Don't expose DB port in production
    expose:
      - "5432"

  web:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "80:5000"
    environment:
      # Flask configuration
      FLASK_APP: app.py
      FLASK_ENV: production
      FLASK_DEBUG: 0
      
      # Database configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-family_wiki_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-family_wiki}
      
      # Ollama configuration
      OLLAMA_HOST: ${OLLAMA_HOST}
      OLLAMA_PORT: ${OLLAMA_PORT:-11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-aya:35b-23}
      
      # Security configuration
      SECRET_KEY: ${SECRET_KEY}
      WTF_CSRF_ENABLED: ${WTF_CSRF_ENABLED:-True}
    extra_hosts:
      # Map local network hostnames to host IP
      # This allows Docker containers to resolve hostnames that work on your local network
      - "${OLLAMA_HOST}:host-gateway"
      # You can add more hostname mappings here if needed:
      # - "your-hostname:host-gateway"
    volumes:
      # Persistent storage for uploads and extracted content
      - app_uploads:/app/web_app/pdf_processing/pdfs
      - app_extracted:/app/web_app/pdf_processing/extracted_text
      - app_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "./docker/healthcheck.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - family-wiki-network

  # Nginx with automated Let's Encrypt SSL
  nginx:
    image: jonasal/nginx-certbot:5.4.0
    ports:
      - "443:443"
      - "80:80"
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
    volumes:
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d:ro
      - nginx_secrets:/etc/letsencrypt
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - family-wiki-network

  # Celery worker for background tasks
  celery-worker:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A web_app.tasks.celery_app worker --loglevel=info
    environment:
      # Database configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-family_wiki_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-family_wiki}
      
      # Celery configuration
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
      
      # Ollama configuration
      OLLAMA_HOST: ${OLLAMA_HOST}
      OLLAMA_PORT: ${OLLAMA_PORT:-11434}
      OLLAMA_MODEL: ${OLLAMA_MODEL:-aya:35b-23}
    extra_hosts:
      - "${OLLAMA_HOST}:host-gateway"
    volumes:
      # Persistent storage for uploads and extracted content
      - app_uploads:/app/web_app/pdf_processing/pdfs
      - app_extracted:/app/web_app/pdf_processing/extracted_text
      - app_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - family-wiki-network

  # Redis for Celery (production)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - family-wiki-network
    expose:
      - "6379"

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local
  app_extracted:
    driver: local
  app_logs:
    driver: local
  nginx_secrets:
    driver: local

networks:
  family-wiki-network:
    driver: bridge